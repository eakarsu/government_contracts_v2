version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: contract_postgres
    environment:
      POSTGRES_DB: contract_db
      POSTGRES_USER: contract_user
      POSTGRES_PASSWORD: contract_password
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U contract_user -d contract_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # Main Node.js API server with ChromaDB support
  api:
    build: .
    container_name: contract_api
    environment:
      DATABASE_URL: postgresql://contract_user:contract_password@postgres:5432/contract_db
      NODE_ENV: development
      PORT: 3000
      API_BASE_URL: http://localhost:3000
      REACT_APP_OPENROUTER_KEY: ${OPENROUTER_API_KEY}
      SAM_GOV_API_KEY: ${SAM_GOV_API_KEY}
      NORSHIN_API_KEY: ${NORSHIN_API_KEY}
      NORSHIN_API_URL: ${NORSHIN_API_URL}
      # ChromaDB configuration
      CHROMA_DB_PATH: /app/vector_indexes
      PYTHONPATH: /usr/lib/python3.11/site-packages
    ports:
      - "3000:3000"
    volumes:
      - ./uploads:/app/uploads
      - ./documents:/app/documents
      - ./queue_documents:/app/queue_documents
      - ./processed_queue_documents:/app/processed_queue_documents
      - ./downloaded_documents:/app/downloaded_documents
      - ./temp_downloads:/app/temp_downloads
      - ./temp_conversions:/app/temp_conversions
      - ./vector_indexes:/app/vector_indexes
      - ./temp_images:/app/temp_images
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
